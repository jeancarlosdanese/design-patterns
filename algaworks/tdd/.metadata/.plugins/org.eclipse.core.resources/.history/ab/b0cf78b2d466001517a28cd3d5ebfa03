package com.algaworks;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

public class PedidoTest {

	private Pedido pedido;

	@Before
	public void setup() {
		pedido = new Pedido();
	}

	private void assertResumoDoPedido(double valorTotalEsperado, double descontoEsperado) {
		ResumoPedido resumoPedido = pedido.resumo();
		assertEquals(valorTotalEsperado, resumoPedido.getValorTotal(), 0.0001);
		assertEquals(descontoEsperado, resumoPedido.getDesconto(), 0.0001);
	}
	
	@Test
	public void daveCriarPedido() throws Exception {
	}

	@Test
	public void devePermitirAdicionarUmItemNoPedido() throws Exception {
		pedido.adicionarItem(new ItemPedido("Sabonete", 3.0, 10));
	}

	@Test
	public void deveCalculaValotTotalEDescontoParaPedidoVazio() throws Exception {
		assertResumoDoPedido(0.0, 0.0);
	}

	@Test
	public void deveCalcularResumoParaUmItemSemDesconto() throws Exception {
		pedido.adicionarItem(new ItemPedido("Sabonete", 5.0, 5));
		assertResumoDoPedido(25.0, 0);
	}

	@Test
	public void deveCalcularResumoParaDoisItemSemDesconto() throws Exception {
		pedido.adicionarItem(new ItemPedido("Sabonete", 3.0, 3));
		pedido.adicionarItem(new ItemPedido("Creme dental", 7.0, 3));
		assertResumoDoPedido(30.0, 0);
	}
	
	@Test
	public void deveAplicarDescontoNa1aFaixa() throws Exception  {
		pedido.adicionarItem(new ItemPedido("Creme", 20.0, 20));
		assertResumoDoPedido(400, 16.0);
	}
	
	@Test
	public void deveAplicarDescontoNa2aFaixa() throws Exception  {
		pedido.adicionarItem(new ItemPedido("Creme", 20.0, 20));
		assertResumoDoPedido(400, 16.0);
	}
	
	
	

}
